<?php


namespace app\index\controller;

use app\index\model\Coin;
use think\Db;

class His extends Base
{
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    public function index()
    {
        return $this->fetch();
    }




    /**
     * 查看列表
     */
    public function hisList($status = 0)
    {
        if ($this->roleId == 0) //村企业
        {
            $where['a.creator_id'] = $this->userId;
            //当前用户发布的申请
            $demondInfos = Db::name('his')
                ->alias('a')
                ->where($where)
                ->order('a.created_at desc')
                ->field("a.*")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        } else if (in_array($this->roleId, [1, 3, 8])) {
            $demondInfos = Db::name('his')
                ->alias('a')
                ->order('a.created_at desc')
                ->field("a.*")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        } else {
            return;
        }

        $this->assign([
            'demondInfos' => $demondInfos,
            'page' => $page,
            'status' => $status,
            'role' => $this->roleId,
            'userId' => $this->userId,
        ]);

        if (isMobile()) {
            return $this->fetch("show_mobile_his_list");
        } else {
            return $this->fetch("show_his_list");
        }

    }

    //创建视图
    public function saveView($bidId = 0)
    {
        /**
         * 只有村企业可提交申请
         * */
        if ($this->roleId == 0) {
            $demondInfo = $this->getBidDetail($bidId);

            $this->assign([
                'demondInfo' => $demondInfo,
            ]);
            if (isMobile()) {
                return $this->fetch("view_mobile_his_save");
            } else {
                return $this->fetch("view_his_save");
            }
        }
        return;
    }


    //进行保存
    public function saveHis()
    {
        foreach ($this->params as $k => $v) {
            if ($k != 'bid_id' && $k != 'other_require' && $k != 'file1'&& $k != 'file2'&& $k != 'file3'&& $k != 'file4'&& $k != 'file5'&&$k != 'file_1'&& $k != 'file_2'&& $k != 'file_3'&& $k != 'file_4') {
                if ($v == '') {
                    $this->apiReturn('200', "请将信息填写完整！", []);
                }
            }
        }

        //时间戳转时间
        $this->params['enrol_start_time'] = strtotime($this->params['enrol_start_time']);
        $this->params['enrol_end_time'] = strtotime($this->params['enrol_end_time']);
        if ($this->params['bid_id'] == '') //新增申请
        {
            $bidData = [
                'creator_id' => $this->userId,
                'status' => 1,
                'enrol_start_time' => $this->params['enrol_start_time'],
                'enrol_end_time' => $this->params['enrol_end_time'],
                'rent_name' => $this->params['rent_name'],
                'rent_house' => $this->params['rent_house'],
                'rent_floor' => $this->params['rent_floor'],
                'rent_area' => $this->params['rent_area'],
                'rent_price' => $this->params['rent_price'],
                'pdf' => $this->params['pdf'],
            ];
            $hisId = Db::name("his")->insertGetId($bidData);

            if ($hisId) {
                //添加通知
                //addNotice("审核单已提交,点击查看!", $this->userId, $bidId);
                $this->apiReturn('100', "您的申请已提交！", []);
            }
            $this->apiReturn('200', "您的申请提交失败，请重新提交！！", []);
        } else { //修改申请
            // TODO 修改入口
        }

    }


    //查看详情
    public function viewBid($bidId = 0)
    {
        $demondInfo = $this->getBidDetail($bidId);
        //审核情况
        $examineInfo = Db::name("his_examine")->where(['bid_id' => $bidId])->order("created_at desc")->find();
        $examTitle = $demondInfo['examine_type'] == 1 ? "再审" : ($demondInfo['examine_type'] == 2 ? "终审" : "预审");
        $this->assign([
            'examineTitle' => $examTitle,
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
            'role' => $this->roleId,
            'userId' => $this->userId
        ]);
        return $this->fetch();
    }

    public function getBidDetail($bidId = 0)
    {
        $demondInfo = Db::name('his')
            ->where(['a.id' => $bidId])
            ->alias('a')
            ->order('created_at desc')
            ->field("a.*")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['enrol_start_time'] = date('Y-m-d', $demondInfo['enrol_start_time']);
            $demondInfo['enrol_end_time'] = date('Y-m-d', $demondInfo['enrol_end_time']);
        }
        return $demondInfo;
    }

    //审核页面跳转
    public function examineHisView($bidId = 0)
    {
        //审核情况
        $examineInfo = Db::name("his_examine")->where(['bid_id' => $bidId])->order("created_at desc")->find();

        $this->assign([
            'demondInfo' => $this->getBidDetail($bidId),
            'examineInfo' => $examineInfo,
            'roleName' => $this->roleName,
            'roleId' => $this->roleId,
        ]);

        return $this->fetch();
    }

    //提交审核结果
    public function hisExamine()
    {
        if (!in_array($this->roleId, [1, 3, 8])) {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'bid') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        if ($this->roleId == 1) {
            $jingBefore = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->find();
            if ($jingBefore['jing_before_examine_status'] != 0) {
                $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
            }
            if ($this->params['jing_before_examine_reason'] == '请输入审核意见') {
                $this->params['jing_before_examine_reason'] = '';
            }
            $examineInfo = [
                'bid_id' => $this->params['bid_id'],
                'jing_before_id' => $this->userId,
                'jing_before_examine_status' => $this->params['jing_before_examine_status'],
                'jing_before_time' => time(),
                'jing_before_examine_reason' => $this->params['jing_before_examine_reason'],
            ];
            if (empty($jingBefore)) {
                $res = Db::name("his_examine")->insert($examineInfo);
            } else {
                $res = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->update($examineInfo);
            }
            $bidStatus = 1;
            if ($this->params['jing_before_examine_status'] == 2) {//已驳回 中止了
                $bidStatus = 3;
            }
            Db::name("his")->where(['id' => $this->params['bid_id']])->update(['status' => $bidStatus]);
            if ($res) $this->apiReturn('100', "恭喜您，审核成功！", []);
        }


        if ($this->roleId == 8) {//经管办
            $examine = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->find();
            if ($examine['jing_before_examine_status'] == 0) {
                $this->apiReturn('200', "镇经管办还未审核，请稍后再审核", []);
            }
            if ($examine['management_examine_status'] != 0) {
                $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
            }
            if ($this->params['management_examine_reason'] == '请输入审核意见') {
                $this->params['management_examine_reason'] = '';
            }
            $examineInfo = [
                'management_id' => $this->userId,
                'management_examine_status' => $this->params['management_examine_status'],
                'management_time' => time(),
                'management_examine_reason' => $this->params['management_examine_reason'],
            ];
            $res8 = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->update($examineInfo);
            $bidStatus = 1;
            if ($this->params['management_examine_status'] == 2) {//已驳回 中止了
                $bidStatus = 3;
            }
            Db::name("his")->where(['id' => $this->params['bid_id']])->update(['status' => $bidStatus]);
            if ($res8) $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        if ($this->roleId == 3) {//农经站
            $examine = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->find();
            if ($examine['jing_before_examine_status'] == 0 || $examine['management_examine_status'] == 0) {
                $this->apiReturn('200', "镇经管办预审/经管办 还未审核，请稍后再审核", []);
            }
            if ($examine['farmer_examine_status'] != 0) {
                $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
            }
            if ($this->params['farmer_examine_reason'] == '请输入审核意见') {
                $this->params['management_examine_reason'] = '';
            }
            $examineInfo = [
                'farmer_id' => $this->userId,
                'farmer_examine_status' => $this->params['farmer_examine_status'],
                'farmer_time' => time(),
                'farmer_examine_reason' => $this->params['farmer_examine_reason'],
            ];
            $res3 = Db::name("his_examine")->where(['bid_id' => $this->params['bid_id']])->update($examineInfo);
            $bidStatus = 2; //农经站 审核完成 更新bid状态 已审核
            if ($this->params['farmer_examine_status'] == 2) {//已驳回 中止了
                $bidStatus = 3;
            }
            Db::name("his")->where(['id' => $this->params['bid_id']])->update(['status' => $bidStatus]);
            if ($res3) $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", []);
    }

    public function uploadBidAttach()
    {
        $attach = $this->params['annex_address'];
        $bidId = $this->params['bid_id'];
        if ($attach == "") {
            $this->apiReturn('200', "附件信息不存在！", []);
        }
        $bidInfo = Db::name("bid")->where(["id" => $bidId])->find();
        if (empty($bidInfo)) {
            $this->apiReturn('200', "您的申请已不存在！", []);
        }
        if ($bidInfo['status'] == 2) {
            if ($bidInfo['examine_type'] == 0) {
                $firstUploadData = ['attachment_first' => $attach, 'attachment_first_time' => time(), 'examine_type' => 1, 'status' => 1];
                $res = Db::name("bid")->where(['id' => $bidId])->update($firstUploadData);
                Db::name("bid_examine")->where(["bid_id" => $bidId])->delete();
                $this->apiReturn('100', "您的附件已提交！", []);
            }

            if ($bidInfo['examine_type'] == 1) {
                $firstUploadData = ['attachment_second' => $attach, 'attachment_second_time' => time(), 'examine_type' => 2, 'status' => 1];
                $res = Db::name("bid")->where(['id' => $bidId])->update($firstUploadData);
                Db::name("bid_examine")->where(["bid_id" => $bidId])->delete();
                $this->apiReturn('100', "您的附件已提交！", []);
            }
        }
        $this->apiReturn('200', "提交附件失败，请核实后在操作！", []);
    }

    public function getAjaxBidDetail()
    {
        $bidId = $this->params['id'];
        $this->apiReturn('200', "ok", ["bidInfo" => $this->getBidDetail($bidId)]);
    }

    //单图片上传接口;
    public function uploadimg(){

        $file = request()->file('file');
        // 移动到框架应用根目录/public/uploads/ 目录下
        if($file){
            $info = $file->move(ROOT_PATH . 'public' . DS . 'uploads');
            if($info){
                $this->apiReturn('200', "ok", ["msg" =>'/uploads/'.$info->getSaveName()]);
                //return json_encode(['code'=>1,'msg'=>'/public/uploads/'.$info->getSaveName()]);

            }else{

                $this->apiReturn(100,$info->getError());

            }
        }
    }


}