<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/11/19
 * Time: 15:52
 */

namespace app\index\controller;

use app\index\model\Coin;
use PhpOffice\PhpSpreadsheet\Spreadsheet;
use PhpOffice\PhpSpreadsheet\Writer\Xlsx;
use think\Db;
use app\index\model\PortalPost;
use think\facade\Config;

/**
 * 审核
 * Class Index
 * @package app\wap\controller
 */
class Examine extends Base
{

    public $news;
    public $userNotice;

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->news = Db::table('ecshecom_portal_post');
        $this->userNotice = model('index/UserNotice');
    }

    /**
     * 已审核
     */
    public function index()
    {
        return $this->fetch();
    }

    /**
     * 发布需求
     */
    public function releaseDemand($demandId = 0)
    {
        /**
         * 只有村企业可提交申请
         * */
        if ($this->roleId == 0) {
            $demondInfo = Db::name('apple')
                ->where(['a.id' => $demandId])
                ->alias('a')
                ->order('d.created_at desc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->find();

            if ($demondInfo['apple_status'] == 1) {
                die;
            }

            if (isset($demondInfo)) {
                $demondInfo['build_at'] = date('Y-m-d', $demondInfo['build_at']);
                $demondInfo['finished_at'] = date('Y-m-d', $demondInfo['finished_at']);
                $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
                $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
                $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
                $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
                $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
                $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
            }

            $this->assign([
                'demondInfo' => $demondInfo,
                'investment_mode' => \config("config.investment_mode"),
                'nature_of_building' => \config("config.nature_of_building"),
                'reasons_for_termination' => \config("config.reasons_for_termination"),
                'type_of_contract' => \config("config.type_of_contract"),
                'leasing_mode' => \config("config.leasing_mode"),
                'tax_landing' => \config("config.tax_landing"),
                'actual_use_after_lease' => \config("config.actual_use_after_lease"),
            ]);
            if (isMobile()) {
                return $this->fetch("release_mobile_demand");
            } else {
                return $this->fetch();
            }
        }

        return;
    }

    public function releaseDemandStatus($demandId = 0)
    {
        /**
         * 只有村企业可提交申请
         * */
        if ($this->roleId == 0) {
            $demondInfo = Db::name('apple')
                ->where(['a.id' => $demandId])
                ->alias('a')
                ->order('d.created_at desc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->find();

            if ($demondInfo['apple_status'] == 1) {
                die;
            }

            if (isset($demondInfo)) {
                $demondInfo['build_at'] = date('Y', $demondInfo['build_at']);
                $demondInfo['finished_at'] = date('Y', $demondInfo['finished_at']);
                $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
                $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
                $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
                $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
                $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
                $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
                //用户多选
                $demondInfo['purpose'] = explode(",",$demondInfo['purpose']);
            }

            $this->assign([
                'demondInfo' => $demondInfo,
                'investment_mode' => \config("config.investment_mode"),
                'nature_of_building' => \config("config.nature_of_building"),
                'reasons_for_termination' => \config("config.reasons_for_termination"),
                'type_of_contract' => \config("config.type_of_contract"),
                'leasing_mode' => \config("config.leasing_mode"),
                'tax_landing' => \config("config.tax_landing"),
                'actual_use_after_lease' => \config("config.actual_use_after_lease"),
            ]);
            if (isMobile()) {
                return $this->fetch("release_mobile_demand");
            } else {
                return $this->fetch();
            }
        }

        return;
    }

    //搜索需求
    public function searchNeed()
    {
        //文本域判断
        if ($this->params['search_content'] == "") {
            $this->apiReturn('200', "请填写搜索的内容!", []);
        }

        $backContent = Db::name("apple_details")->where(["house_name" => $this->params['search_content']])->order("created_at desc")->find();
        if (isset($backContent)) {
            unset($backContent["id"]);
            unset($backContent["apple_id"]);
            $backContent['build_at'] = date('Y-m-d', $backContent['build_at']);
            $backContent['finished_at'] = date('Y-m-d', $backContent['finished_at']);
            $backContent['lease_start'] = date('Y-m-d', $backContent['lease_start']);
            $backContent['lease_end'] = date('Y-m-d', $backContent['lease_end']);
            $backContent['lease_end_day'] = date('Y-m-d', $backContent['lease_end_day']);
            $backContent['lease_start_now'] = date('Y-m-d', $backContent['lease_start_now']);
            $backContent['lease_end_now'] = date('Y-m-d', $backContent['lease_end_now']);
            $backContent['rent_start_day'] = date('Y-m-d', $backContent['rent_start_day']);
            $this->apiReturn('100', "已匹配历史申请信息!", $backContent);
        } else {
            $this->apiReturn('200', "暂无匹配历史申请信息!", []);
        }
    }

    public function updateFile()
    {
        // 获取表单上传文件
        $file = request()->file("annex_address");
        if (empty($file)) {
            $this->apiReturn('200', "附件上传失败!", []);
        }
        // 移动到框架应用根目录/public/annex/ 目录下
        $info = $file->move(ROOT_PATH . 'public' . DS . 'annex');
        $filename = $info->getSaveName();
        if ($filename) {
            $this->apiReturn('100', "附件上传成功!", ["address" => "/annex/" . $filename]);
        } else {
            $this->apiReturn('200', "附件上传失败!", []);
        }
    }

    /**
     * 接收村企业需求
     */
    public function getreleaseDemand()
    {
        $save = $this->params['methods'];
        unset($this->params['methods']);
        $flag = 0;
        if ($save == 'save') {
            foreach ($this->params as $k => $v) {
                if ($k != 'id' && $k != 'apple_id' && $k != 'annex_address') {
                    if ($v == '') {
                        $flag = 1;
                    }
                }
            }
        } else {
            foreach ($this->params as $k => $v) {
                if ($k != 'id' && $k != 'apple_id' && $k != 'annex_address') {
                    if ($v == '') {
                        //$flag = 1;
                        $this->apiReturn('200', "请填写楼宇审核申请完整！", []);
                    }
                }
            }
        }
        //时间戳转时间
        $this->params['build_at'] = strtotime($this->params['build_at']."/1/1 00:00:00");
        $this->params['finished_at'] = strtotime($this->params['finished_at']."/1/1 00:00:00");
        $this->params['lease_start'] = strtotime($this->params['lease_start']);
        $this->params['lease_end'] = strtotime($this->params['lease_end']);
        $this->params['lease_end_day'] = strtotime($this->params['lease_end_day']);
        $this->params['lease_start_now'] = strtotime($this->params['lease_start_now']);
        $this->params['lease_end_now'] = strtotime($this->params['lease_end_now']);
        $this->params['rent_start_day'] = strtotime($this->params['rent_start_day']);

        //承租后实际用途多选
      if(!empty(input("purpose/a"))){
       $this->params['purpose'] = implode(",",input("purpose/a"));
      }
       

        //文本域判断
        if ($this->params['explain'] == '特殊情况说明') {
            $this->params['explain'] = '';
        }
        if ($flag == 1 && $this->params['id'] != '') {//var_dump($this->params);die;
            $examineData['status'] = 4; //保存
            $examineData['created_at'] = time();
            $updateWheres['id'] = $this->params['id'];
            $res1 = Db::name("apple_details")->where($updateWheres)->update($this->params);
            $this->apiReturn('100', "保存成功！", []);
        }
        if ($this->params['id'] == '') //新增申请
        {
            $appleData['user_id'] = $this->userId;
            $appleData['created_at'] = time();
            $appleData['updated_at'] = time();
            $appleData['status'] = $flag == 1 ? 4 : 0; //待审核
            $appleId = Db::name("apple")->insertGetId($appleData); //总表

            unset($this->params['apple_id']);
            unset($this->params['id']);
            $this->params['apple_id'] = $appleId;
            $this->params['status'] = 0;//待审核
            $this->params['created_at'] = time();
            $this->params['updated_at'] = time();
            $res = Db::name("apple_details")->insert($this->params);

            //创建新审核数据
            $examineData['apple_id'] = $appleId;
            if ($flag == 1) {
                $examineData['status'] = 4; //保存
                $examineData['created_at'] = time();
                $res1 = Db::name("examine")->insert($examineData);
                $this->apiReturn('100', "保存成功！", []);
            } else {
                $examineData['status'] = 0; //待审核
                $examineData['created_at'] = time();
                $res1 = Db::name("examine")->insert($examineData);
            }
            //$examineData['status']= 0; //待审核


            if ($appleId && $res && $res1) {
                //添加通知
                addNotice($this->params['house_name'] . "审核单已提交,点击查看!", $this->userId, $appleId);
                $this->apiReturn('100', "您的楼宇审核申请已提交！", []);
            }
            $this->apiReturn('200', "您的楼宇审核申请提交失败，请重新提交！！", []);
        } else { //修改申请
            //判断是否已驳回
            $appleDetailsStatus = Db::name("apple_details")->where(['id' => $this->params['id']])->value("status");
            //获取驳回数据
            $oldExamineInfo = Db::name("examine")->where(['apple_id' => $this->params['apple_id']])->order("created_at desc")->find();
            $appleData['updated_at'] = time();
            if ($appleDetailsStatus == 3) //已被驳回
            {
                if ($oldExamineInfo['jing_before_examine_status'] == 2) //经管办预审
                {
                    $appleData['status'] = 0; //还原为待审核
                } else {
                    $appleData['status'] = 1; //审核中
                }
            } else {
                $appleData['status'] = 0; //还原为待审核
            }
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleData); //总表
            if ($appleDetailsStatus == 3) //已被驳回
            {
                unset($this->params['id']);
                if ($oldExamineInfo['jing_before_examine_status'] == 2) //经管办预审
                {
                    $this->params['status'] = 0;//待审核
                } else {
                    $this->params['status'] = 1;//审核中
                }
                $this->params['created_at'] = time();
                $this->params['updated_at'] = time();
                $res1 = Db::name("apple_details")->insert($this->params);

                //创建新审核数据,保留已经审核通过的数据
                unset($oldExamineInfo['id']);
                //把驳回数据清空
                if ($oldExamineInfo['jing_before_examine_status'] == 2) //经管办预审
                {
                    $oldExamineInfo['jing_before_examine_status'] = 0; //待审核
                    $oldExamineInfo['jing_before_id'] = 0;
                    $oldExamineInfo['jing_before_time'] = 0;
                    $oldExamineInfo['jing_before_examine_reason'] = "";
                    $oldExamineInfo['contract_type'] = "";
                    $oldExamineInfo['process_type'] = 0;
                    $oldExamineInfo['is_soft_first'] = 0;
                    $oldExamineInfo['is_public_rental'] = 0;
                    $oldExamineInfo['status'] = 0; ////待审核
                }
                if ($oldExamineInfo['finance_examine_status'] == 2) //财政所
                {
                    $oldExamineInfo['finance_examine_status'] = 0; //待审核
                    $oldExamineInfo['finance_id'] = 0;
                    $oldExamineInfo['finance_time'] = 0;
                    $oldExamineInfo['finance_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['jing_examine_status'] == 2) //镇经发办
                {
                    $oldExamineInfo['jing_examine_status'] = 0; //待审核
                    $oldExamineInfo['jing_id'] = 0;
                    $oldExamineInfo['jing_time'] = 0;
                    $oldExamineInfo['jing_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['farmer_examine_status'] == 2) //农经站
                {
                    $oldExamineInfo['farmer_examine_status'] = 0; //待审核
                    $oldExamineInfo['farmer_id'] = 0;
                    $oldExamineInfo['farmer_time'] = 0;
                    $oldExamineInfo['farmer_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['audit_examine_status'] == 2) //审计办
                {
                    $oldExamineInfo['audit_examine_status'] = 0; //待审核
                    $oldExamineInfo['audit_id'] = 0;
                    $oldExamineInfo['audit_time'] = 0;
                    $oldExamineInfo['audit_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['assets_examine_status'] == 2) //镇资产公司
                {
                    $oldExamineInfo['assets_examine_status'] = 0; //待审核
                    $oldExamineInfo['assets_id'] = 0;
                    $oldExamineInfo['assets_time'] = 0;
                    $oldExamineInfo['assets_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['security_examine_status'] == 2) //安全办前置
                {
                    $oldExamineInfo['security_examine_status'] = 0; //待审核
                    $oldExamineInfo['security_id'] = 0;
                    $oldExamineInfo['security_time'] = 0;
                    $oldExamineInfo['security_examine_reason'] = "";
                    $oldExamineInfo['safe_1'] = 0;
                    $oldExamineInfo['safe_reason_1'] = "";
                    $oldExamineInfo['safe_2'] = 0;
                    $oldExamineInfo['safe_reason_2'] = "";
                    $oldExamineInfo['safe_3'] = 0;
                    $oldExamineInfo['safe_reason_3'] = "";
                    $oldExamineInfo['safe_4'] = 0;
                    $oldExamineInfo['safe_reason_4'] = "";
                    $oldExamineInfo['safe_5'] = 0;
                    $oldExamineInfo['safe_reason_5'] = "";
                    $oldExamineInfo['safe_6'] = 0;
                    $oldExamineInfo['safe_reason_6'] = "";
                    $oldExamineInfo['safe_img'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['security_do_examine_status'] == 2) //安全办
                {
                    $oldExamineInfo['security_do_examine_status'] = 0; //待审核
                    $oldExamineInfo['security_do_id'] = 0;
                    $oldExamineInfo['security_do_time'] = 0;
                    $oldExamineInfo['security_do_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['management_examine_status'] == 2) //经管办
                {
                    $oldExamineInfo['management_examine_status'] = 0; //待审核
                    $oldExamineInfo['management_id'] = 0;
                    $oldExamineInfo['management_time'] = 0;
                    $oldExamineInfo['management_examine_reason'] = "";
                    $oldExamineInfo['management_1'] = 0;
                    $oldExamineInfo['management_reason_1'] = "";
                    $oldExamineInfo['management_2'] = 0;
                    $oldExamineInfo['management_reason_2'] = "";
                    $oldExamineInfo['management_3'] = 0;
                    $oldExamineInfo['management_reason_3'] = "";
                    $oldExamineInfo['management_4'] = 0;
                    $oldExamineInfo['management_reason_4'] = "";
                    $oldExamineInfo['management_5'] = 0;
                    $oldExamineInfo['management_reason_5'] = "";
                    $oldExamineInfo['management_6'] = 0;
                    $oldExamineInfo['management_reason_6'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }
                if ($oldExamineInfo['town_examine_status'] == 2) //镇领导
                {
                    $oldExamineInfo['town_examine_status'] = 0; //待审核
                    $oldExamineInfo['town_id'] = 0;
                    $oldExamineInfo['town_time'] = 0;
                    $oldExamineInfo['town_examine_reason'] = "";
                    $oldExamineInfo['status'] = 1; //审核中
                }

                $oldExamineInfo['apple_id'] = $this->params['apple_id'];
                $oldExamineInfo['created_at'] = time();
                $oldExamineInfo['updated_at'] = 0;
                $res2 = Db::name("examine")->insert($oldExamineInfo);

                if ($res && $res1 && $res2) {
                    //添加通知
                    addNotice($this->params['house_name'] . "审核驳回的审核单已更新,点击查看!", $this->userId, $this->params['apple_id']);
                    $this->apiReturn('100', "您的楼宇审核申请已更新！", []);
                }
                $this->apiReturn('200', "您的楼宇审核申请提交失败，请重新提交！！", []);
            } else if ($appleDetailsStatus == 0) { //待审核
                $updateWhere['id'] = $this->params['id'];
                unset($this->params['id']);
                $this->params['updated_at'] = time();
                $res1 = Db::name("apple_details")->where($updateWhere)->update($this->params);
                if ($res && $res1) {
                    //添加通知
                    addNotice($this->params['house_name'] . "待审核的审核单已更新,点击查看!", $this->userId, $this->params['apple_id']);
                    $this->apiReturn('100', "您的楼宇审核申请已更新！", []);
                }
                $this->apiReturn('200', "您的楼宇审核申请提交失败，请重新提交！！", []);
            } else {
                return false;
            }
        }

    }

    /**
     * 镇经管办预审提交审核信息
     */
    public function getreleaseExamine()
    {//echo '<pre>' ;var_dump($this->params);die;
        if ($this->roleId != 1) //不是镇经管办预审
        {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'id' && $k != 'apple_id') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        //判断是否已有其它角色人员已审核
        $jingBeforeExamineStatus = Db::name("examine")->where(['id' => $this->params['examine_id']])->value("jing_before_examine_status");
        if ($jingBeforeExamineStatus != 0) {
            $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
        }

        if ($this->params['jing_before_examine_reason'] == '请输入审核意见') {
            $this->params['jing_before_examine_reason'] = '';
        }

        //apple表
        $appleSave['contract_type'] = $this->params['contract_type'];
        $appleSave['process_type'] = $this->params['process_type'];
        $appleSave['is_soft_first'] = $this->params['is_soft_first'];
        $appleSave['is_public_rental'] = $this->params['is_public_rental'];
        if ($this->params['jing_before_examine_status'] == 0) //驳回
        {
            $appleSave['status'] = 3; //驳回
            $appleDetailInfo['status'] = 3; //驳回
            $examineSave['status'] = 3; //驳回
            $examineSave['jing_before_examine_status'] = 2; //驳回
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单被镇经管办预审驳回,点击查看!", $this->userId, $this->params['apple_id']);
        } else {
            $appleSave['status'] = 1; //审核中
            $appleDetailInfo['status'] = 1; //审核中
            $examineSave['status'] = 1; //审核中
            $examineSave['jing_before_examine_status'] = 1; //通过
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单已通过镇经管办预审,点击查看!", $this->userId, $this->params['apple_id']);
        }
      	$appleSave['status1'] =isset($this->params['management_1'])?$this->params['management_1']:'' ;
      	$appleSave['status2'] = isset($this->params['management_2'])?$this->params['management_2']:'' ;
      $appleSave['status3'] = isset($this->params['management_3'])?$this->params['management_3']:'' ;
      $appleSave['status4'] = isset($this->params['management_4'])?$this->params['management_4']:'' ;
      $appleSave['status5'] = isset($this->params['management_5'])?$this->params['management_5']:'' ;
      $appleSave['status6'] = isset($this->params['management_6'])?$this->params['management_6']:'' ;
      
      $appleSave['content1'] =isset($this->params['management_reason_1'])?$this->params['management_reason_1']:'' ;
      	$appleSave['content2'] = isset($this->params['management_reason_2'])?$this->params['management_reason_2']:'' ;
      $appleSave['content3'] = isset($this->params['management_reason_3'])?$this->params['management_reason_3']:'' ;
      $appleSave['content4'] = isset($this->params['management_reason_4'])?$this->params['management_reason_4']:'' ;
      $appleSave['content5'] = isset($this->params['management_reason_5'])?$this->params['management_reason_5']:'' ;
      $appleSave['content6'] = isset($this->params['management_reason_6'])?$this->params['management_reason_6']:'' ;
      
       $appleSave['jing_before_examine_reason'] = isset($this->params['jing_before_examine_reason'])?$this->params['jing_before_examine_reason']:'' ;//var_dump($appleSave);die;
        $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
        //apple_details表
        $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
        //examine表
        $examineSave['jing_before_examine_reason'] = $this->params['jing_before_examine_reason'];
        $examineSave['jing_before_id'] = $this->userId;
        $examineSave['jing_before_time'] = time();
        $examineSave['updated_at'] = time();
        $examineSave['contract_type'] = $this->params['contract_type'];
        $examineSave['process_type'] = $this->params['process_type'];
        $examineSave['is_soft_first'] = $this->params['is_soft_first'];
        $examineSave['is_public_rental'] = $this->params['is_public_rental'];
        $res2 = Db::name("examine")->where(['id' => $this->params['examine_id']])->update($examineSave);

        if ($res && $res1 && $res2) {

            $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", []);
    }

    /**
     * 镇经管办预审相关信息
     */
    public function jingBeforeMore($demandId = 0)
    {

        //审核情况
        $examineInfo = Db::name("examine")->where(['id' => $demandId])->order("created_at desc")->find();

        //申请信息
        $demondInfo = Db::name('apple')
            ->where(['a.id' => $examineInfo['apple_id']])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status,a.status1,a.status2,a.status3,a.status4,a.status5,a.status6,a.content1,a.content2,a.content3,a.content4,a.content5,a.content6,a.jing_before_examine_reason")
            ->find();//echo '<pre>';var_dump($demondInfo);die;

        $this->assign([
            'takeTimes' => \config("config.takeTimes"),
            'contactType' => \config("config.contact_type"),
            'contactProcess' => \config("config.contact_process"),
            'examineInfo' => $examineInfo,
            'demondInfo' => $demondInfo,
        ]);

        return $this->fetch();
    }


    /**
     * 安全办提交审核信息
     */
    public function getsaftExamine()
    {
        if ($this->roleId != 7) //安全办
        {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'id' && $k != 'apple_id') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        //判断是否已有其它角色人员已审核
        $securityExamineStatus = Db::name("examine")->where(['id' => $this->params['examine_id']])->value("security_examine_status");
        if ($securityExamineStatus != 0) {
            $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
        }

        if ($this->params['security_examine_reason'] == '请输入审核意见') {
            $this->params['security_examine_reason'] = '';
        }

        if (isset($this->params['safe_img'])) {
            //判定是否是图片
            $safeImg = $this->params['safe_img'];
            $fi = @getimagesize($safeImg); //验证是否是图片
            if ($fi == false) {
                $this->apiReturn('200', lang('img_error'), []);
            }

            //判定是图片流还是路径
            if (preg_match('/^(data:\s*image\/(\w+);base64,)/', $safeImg, $result)) { //图片流
                $type = $result[2];//图片后缀
                $new_file = 'static/upload/';
                if (!file_exists($new_file)) {
                    //检查是否有该文件夹，如果没有就创建，并给予最高权限
                    mkdir($new_file, 0700);
                }

                $filename = time() . '_' . uniqid() . ".{$type}"; //文件名
                $new_file = $new_file . $filename;
                //写入操作
                if (file_put_contents($new_file, base64_decode(str_replace($result[1], '', $safeImg)))) {
                    $this->params['safe_img'] = 'http://' . $_SERVER['HTTP_HOST'] . '/' . $new_file; //图片路径
                }
            } else {
                $this->params['safe_img'] = $safeImg;
            }
        }

        //保存数据
        $res = true;
        $res1 = true;
        if ($this->params['security_examine_status'] == 0) //驳回
        {
            $appleSave['status'] = 3; //驳回
            $appleDetailInfo['status'] = 3; //驳回
            //details表
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
            //apple_details表
            $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
            $examineSave['status'] = 3; //驳回
            $examineSave['security_examine_status'] = 2; //驳回
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单被安全办驳回,点击查看!", $this->userId, $this->params['apple_id']);
        } else {
            $examineSave['security_examine_status'] = 1; //通过
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单已通过安全办审核,点击查看!", $this->userId, $this->params['apple_id']);
        }

        //前置安全审核状态
        $isSoftFirst = Db::name("apple")->where(['id' => $this->params["apple_id"]])->value("is_soft_first");
        if ($isSoftFirst == 1)//需前置安全审核
        {
            $examineSave['safe_img'] = $this->params['safe_img'];
            $examineSave['safe_1'] = $this->params['safe_1'];
            $examineSave['safe_2'] = $this->params['safe_2'];
            $examineSave['safe_3'] = $this->params['safe_3'];
            $examineSave['safe_4'] = $this->params['safe_4'];
            $examineSave['safe_5'] = $this->params['safe_5'];
            $examineSave['safe_6'] = $this->params['safe_6'];
            if ($this->params['safe_reason_1'] == '请输入审核意见') {
                $this->params['safe_reason_1'] = '';
            }
            if ($this->params['safe_reason_2'] == '请输入审核意见') {
                $this->params['safe_reason_2'] = '';
            }
            if ($this->params['safe_reason_3'] == '请输入审核意见') {
                $this->params['safe_reason_3'] = '';
            }
            if ($this->params['safe_reason_4'] == '请输入审核意见') {
                $this->params['safe_reason_4'] = '';
            }
            if ($this->params['safe_reason_5'] == '请输入审核意见') {
                $this->params['safe_reason_5'] = '';
            }
            if ($this->params['safe_reason_6'] == '请输入审核意见') {
                $this->params['safe_reason_6'] = '';
            }
            $examineSave['safe_reason_1'] = $this->params['safe_reason_1'];
            $examineSave['safe_reason_2'] = $this->params['safe_reason_2'];
            $examineSave['safe_reason_3'] = $this->params['safe_reason_3'];
            $examineSave['safe_reason_4'] = $this->params['safe_reason_4'];
            $examineSave['safe_reason_5'] = $this->params['safe_reason_5'];
            $examineSave['safe_reason_6'] = $this->params['safe_reason_6'];
        }

        $examineSave['security_examine_reason'] = $this->params['security_examine_reason'];
        $examineSave['security_id'] = $this->userId;
        $examineSave['security_time'] = time();
        $examineSave['updated_at'] = time();
        $res2 = Db::name("examine")->where(['id' => $this->params['examine_id']])->update($examineSave);

        if ($res && $res1 && $res2) {

            $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", []);

    }

    /**
     * 安全办相关信息
     */
    public function securityMore($demandId = 0)
    {
        //审核情况
        $examineInfo = Db::name("examine")->where(['id' => $demandId])->order("created_at desc")->find();

        $demondInfo = Db::name('apple')
            ->where(['a.id' => $examineInfo['apple_id']])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['build_at'] = date('Y-m-d', $demondInfo['build_at']);
            $demondInfo['finished_at'] = date('Y-m-d', $demondInfo['finished_at']);
            $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
            $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
            $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
            $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
            $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
            $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
        }

        $this->assign([
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
        ]);
        $this->assign([
            'takeTimes' => \config("config.takeTimes"),
            'examineInfo' => $examineInfo,
        ]);

        return $this->fetch();
    }

    /**
     * 5个其它提交审核信息
     */
    public function getCommonExamine()
    {

        /*
         * //不是2：镇经发办 3：农经站 4：审计办 5：财政所 6：镇资产公司 10：安全办，通用审核，无先后顺序
         * */
        if ($this->roleId != 2 && $this->roleId != 3 && $this->roleId != 4 && $this->roleId != 5 && $this->roleId != 6 && $this->roleId != 10) {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'id' && $k != 'apple_id') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        //获取当前角色的审核状态字段
        if ($this->roleId == 2) {
            $statusName = 'jing_examine_status';
            $reasonName = 'jing_examine_reason';
            $userName = 'jing_id';
            $timeName = 'jing_time';
            $roleName = '镇经发办';
        }//2：镇经发办
        if ($this->roleId == 3) {
            $statusName = 'farmer_examine_status';
            $reasonName = 'farmer_examine_reason';
            $userName = 'farmer_id';
            $timeName = 'farmer_time';
            $roleName = '农经站';
        }//3：农经站
        if ($this->roleId == 4) {
            $statusName = 'audit_examine_status';
            $reasonName = 'audit_examine_reason';
            $userName = 'audit_id';
            $timeName = 'audit_time';
            $roleName = '审计办';
        }//4：审计办
        if ($this->roleId == 5) {
            $statusName = 'finance_examine_status';
            $reasonName = 'finance_examine_reason';
            $userName = 'finance_id';
            $timeName = 'finance_time';
            $roleName = '财政所';
        }//5：财政所
        if ($this->roleId == 6) {
            $statusName = 'assets_examine_status';
            $reasonName = 'assets_examine_reason';
            $userName = 'assets_id';
            $timeName = 'assets_time';
            $roleName = '镇资产公司';
        }//6：镇资产公司
        if ($this->roleId == 10) {
            $statusName = 'security_do_examine_status';
            $reasonName = 'security_do_examine_reason';
            $userName = 'security_do_id';
            $timeName = 'security_do_time';
            $roleName = '安全办';
        }//10：安全办

        //判断是否已有其它角色人员已审核
        $statusNameShow = Db::name("examine")->where(['id' => $this->params['examine_id']])->value($statusName);
        if ($statusNameShow != 0) {
            $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
        }

        if ($this->params[$reasonName] == '请输入审核意见') {
            $this->params[$reasonName] = '';
        }

        $res = true;
        $res1 = true;

        //apple表
        if ($this->params[$statusName] == 0) //驳回
        {
            $appleSave['status'] = 3; //驳回
            $appleDetailInfo['status'] = 3; //驳回
            $examineSave['status'] = 3; //驳回
            $examineSave[$statusName] = 2; //驳回
            //apple表
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
            //apple_details表
            $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单被" . $roleName . "驳回,点击查看!", $this->userId, $this->params['apple_id']);
        } else {
            $appleSave['status'] = 1; //审核中
            $appleDetailInfo['status'] = 1; //审核中
            $examineSave['status'] = 1; //审核中
            $examineSave[$statusName] = 1; //通过
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单已通过" . $roleName . ",点击查看!", $this->userId, $this->params['apple_id']);
        }

        //examine表
        $examineSave[$reasonName] = $this->params[$reasonName];
        $examineSave[$userName] = $this->userId;
        $examineSave[$timeName] = time();
        $examineSave['updated_at'] = time();

        $res2 = Db::name("examine")->where(['id' => $this->params['examine_id']])->update($examineSave);

        if ($res && $res1 && $res2) {

            $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", []);
    }


    /**
     * 经管办相关信息
     */
    public function managementDemand($demandId = 0)
    {
        //审核情况
        $examineInfo = Db::name("examine")->where(['id' => $demandId])->order("created_at desc")->find();

        $demondInfo = Db::name('apple')
            ->where(['a.id' => $examineInfo['apple_id']])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['build_at'] = date('Y-m-d', $demondInfo['build_at']);
            $demondInfo['finished_at'] = date('Y-m-d', $demondInfo['finished_at']);
            $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
            $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
            $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
            $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
            $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
            $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
        }

        $this->assign([
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
        ]);
        $this->assign([
            'takeTimes' => \config("config.takeTimes"),
            'examineInfo' => $examineInfo,
        ]);

        return $this->fetch();
    }

    /**
     * 经管办提交审核信息
     */
    public function getmanagementExamine()
    {
        if ($this->roleId != 8) //经管办
        {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'id' && $k != 'apple_id') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        //判断是否已有其它角色人员已审核
        $managementExamineStatus = Db::name("examine")->where(['id' => $this->params['examine_id']])->value("management_examine_status");
        if ($managementExamineStatus != 0) {
            $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
        }

        if (!empty($this->params['management_examine_reason']) && $this->params['management_examine_reason'] == '请输入审核意见') {
            $this->params['management_examine_reason'] = '';
        }

        //保存数据
        $res = true;
        $res1 = true;
        if ($this->params['management_examine_status'] == 0) //驳回
        {
            $appleSave['status'] = 3; //驳回
            $appleDetailInfo['status'] = 3; //驳回
            //details表
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
            //apple_details表
            $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
            $examineSave['status'] = 3; //驳回
            $examineSave['management_examine_status'] = 2; //驳回
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单被经管办驳回,点击查看!", $this->userId, $this->params['apple_id']);
        } else {
            //如果是简约流程，经管办审核直接通过
            $processType = Db::name("apple")->where(['id' => $this->params['apple_id']])->value("process_type");
            if ($processType == 1)//简约流程
            {
                $appleSave['status'] = 2; //通过
                $appleDetailInfo['status'] = 2; //通过
                //details表
                $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
                //apple_details表
                $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
                $examineSave['status'] = 2; //通过
            }
            $examineSave['management_examine_status'] = 1; //通过
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单已通过经管办审核,点击查看!", $this->userId, $this->params['apple_id']);
        }

        $examineSave['management_1'] = !empty($this->params['management_1'])?$this->params['management_1']:'';
        $examineSave['management_2'] = !empty($this->params['management_1'])?$this->params['management_2']:'';
        $examineSave['management_3'] = !empty($this->params['management_1'])?$this->params['management_3']:'';
        $examineSave['management_4'] = !empty($this->params['management_1'])?$this->params['management_4']:'';
        $examineSave['management_5'] = !empty($this->params['management_1'])?$this->params['management_5']:'';
        $examineSave['management_6'] = !empty($this->params['management_1'])?$this->params['management_6']:'';
        if (empty($this->params['management_reason_1']) || $this->params['management_reason_1'] == '请输入审核意见' ) {
            $this->params['management_reason_1'] = '';
        }
        if (empty($this->params['management_reason_2'])|| $this->params['management_reason_2'] == '请输入审核意见') {
            $this->params['management_reason_2'] = '';
        }
        if (empty($this->params['management_reason_3'])|| $this->params['management_reason_3'] == '请输入审核意见') {
            $this->params['management_reason_3'] = '';
        }
        if (empty($this->params['management_reason_4'])|| $this->params['management_reason_4'] == '请输入审核意见') {
            $this->params['management_reason_4'] = '';
        }
        if (empty($this->params['management_reason_5'])|| $this->params['management_reason_5'] == '请输入审核意见') {
            $this->params['management_reason_5'] = '';
        }
        $examineSave['management_reason_1'] = $this->params['management_reason_1'];
        $examineSave['management_reason_2'] = $this->params['management_reason_2'];
        $examineSave['management_reason_3'] = $this->params['management_reason_3'];
        $examineSave['management_reason_4'] = $this->params['management_reason_4'];
        $examineSave['management_reason_5'] = $this->params['management_reason_5'];

        $examineSave['management_examine_reason'] = !empty($this->params['management_examine_reason'])&&$this->params['management_examine_reason']?$this->params['management_examine_reason']:'';
        $examineSave['management_id'] = $this->userId;
        $examineSave['management_time'] = time();
        $examineSave['updated_at'] = time();
        $res2 = Db::name("examine")->where(['id' => $this->params['examine_id']])->update($examineSave);

        if ($res && $res1 && $res2) {

            $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", [$res,$res1,$res2]);

    }

    /**
     * 经管办结果相关信息
     */
    public function managementMore($demandId = 0)
    {
        //审核情况
        $examineInfo = Db::name("examine")->where(['id' => $demandId])->order("created_at desc")->find();

        $demondInfo = Db::name('apple')
            ->where(['a.id' => $examineInfo['apple_id']])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['build_at'] = date('Y-m-d', $demondInfo['build_at']);
            $demondInfo['finished_at'] = date('Y-m-d', $demondInfo['finished_at']);
            $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
            $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
            $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
            $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
            $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
            $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
        }

        $this->assign([
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
        ]);
        $this->assign([
            'takeTimes' => \config("config.takeTimes"),
            'examineInfo' => $examineInfo,
        ]);

        return $this->fetch();
    }

    /**
     * 镇领导相关信息
     */
    public function townDemand($demandId = 0)
    {
        //审核情况
        $examineInfo = Db::name("examine")->where(['id' => $demandId])->order("created_at desc")->find();

        $demondInfo = Db::name('apple')
            ->where(['a.id' => $examineInfo['apple_id']])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['build_at'] = date('Y-m-d', $demondInfo['build_at']);
            $demondInfo['finished_at'] = date('Y-m-d', $demondInfo['finished_at']);
            $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
            $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
            $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
            $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
            $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
            $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
        }

        $this->assign([
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
        ]);
        $this->assign([
            'takeTimes' => \config("config.takeTimes"),
            'examineInfo' => $examineInfo,
        ]);

        return $this->fetch();
    }

    /**
     * 镇领导提交审核信息
     */
    public function gettownExamine()
    {
        if ($this->roleId != 9) //镇领导
        {
            return false;
        }

        foreach ($this->params as $k => $v) {
            if ($k != 'id' && $k != 'apple_id') {
                if ($v == '') {
                    $this->apiReturn('200', "请填写审核信息完整！", []);
                }
            }
        }

        //判断是否已有其它角色人员已审核
        $townExamineStatus = Db::name("examine")->where(['id' => $this->params['examine_id']])->value("town_examine_status");
        if ($townExamineStatus != 0) {
            $this->apiReturn('200', "该审核已操作，请勿重新操作！", []);
        }

        if ($this->params['town_examine_reason'] == '请输入审核意见') {
            $this->params['town_examine_reason'] = '';
        }

        //保存数据
        if ($this->params['town_examine_status'] == 0) //驳回
        {
            $appleSave['status'] = 3; //驳回
            $appleDetailInfo['status'] = 3; //驳回
            //details表
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
            //apple_details表
            $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
            $examineSave['status'] = 3; //驳回
            $examineSave['town_examine_status'] = 2; //驳回
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单被镇领导驳回,点击查看!", $this->userId, $this->params['apple_id']);
        } else {
            $appleSave['status'] = 2; //通过
            $appleDetailInfo['status'] = 2; //通过
            //details表
            $res = Db::name("apple")->where(['id' => $this->params['apple_id']])->update($appleSave);
            //apple_details表
            $res1 = Db::name("apple_details")->where(['id' => $this->params['id']])->update($appleDetailInfo);
            $examineSave['status'] = 2; //通过
            $examineSave['town_examine_status'] = 1; //通过
            //添加通知
            addNotice($this->params['house_name'] . "提交的审核单已通过经管办审核,点击查看!", $this->userId, $this->params['apple_id']);
        }

        $examineSave['town_examine_reason'] = $this->params['town_examine_reason'];
        $examineSave['town_id'] = $this->userId;
        $examineSave['town_time'] = time();
        $examineSave['updated_at'] = time();
        $res2 = Db::name("examine")->where(['id' => $this->params['examine_id']])->update($examineSave);

        if ($res && $res1 && $res2) {

            $this->apiReturn('100', "恭喜您，审核成功！", []);
        }

        $this->apiReturn('100', "审核失败，请重新操作！", []);

    }

    /**
     * 查看需求
     */
    public function seeDemand($demandId = 0)
    {

        $demondInfo = Db::name('apple')
            ->where(['a.id' => $demandId])
            ->alias('a')
            ->order('d.created_at desc')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
            ->find();

        if (isset($demondInfo)) {
            $demondInfo['build_at'] = date('Y', $demondInfo['build_at']);
            $demondInfo['finished_at'] = date('Y', $demondInfo['finished_at']);
            $demondInfo['lease_start'] = date('Y-m-d', $demondInfo['lease_start']);
            $demondInfo['lease_end'] = date('Y-m-d', $demondInfo['lease_end']);
            $demondInfo['lease_end_day'] = date('Y-m-d', $demondInfo['lease_end_day']);
            $demondInfo['lease_start_now'] = date('Y-m-d', $demondInfo['lease_start_now']);
            $demondInfo['lease_end_now'] = date('Y-m-d', $demondInfo['lease_end_now']);
            $demondInfo['rent_start_day'] = date('Y-m-d', $demondInfo['rent_start_day']);
        }

        //审核情况
        $examineInfo = Db::name("examine")->where(['apple_id' => $demandId])->order("created_at desc")->find();

        $this->assign([
            'demondInfo' => $demondInfo,
            'examineInfo' => $examineInfo,
            'role' => $this->roleId,
        ]);

        if ($this->roleId == 0) //村企业
        {
            return $this->fetch();
        }

        if ($this->roleId == 1) //镇经管办预审
        {
            //当前所有子申请信息
            $demandDetailsInfos = Db::name("apple_details")->where(['apple_id' => $demandId])->field("updated_at")->select();

            //当前审核信息
//            $examineInfo = Db::name("examine")->where(['apple_id' => $demandId])->field("jing_before_examine_status,status,id,jing_before_examine_reason")->order("created_at desc")->find();

            $this->assign([
                'demandDetailsInfos' => $demandDetailsInfos,
                'takeTimes' => \config("config.takeTimes"),
                'contactType' => \config("config.contact_type"),
                'contactProcess' => \config("config.contact_process"),
            ]);

            if ($examineInfo['jing_before_examine_status'] == 0) //未审核
            {
                //去审核
                return $this->fetch('see_demand_jing_before_examine');
            } else {
                return $this->fetch();
            }

        }

        if ($this->roleId == 7) //安全办前置
        {
            //当前所有子申请信息
            $demandDetailsInfos = Db::name("apple_details")->where(['apple_id' => $demandId])->field("updated_at")->select();

            //当前审核信息
            $examineInfo = Db::name("examine")->where(['apple_id' => $demandId])->field("security_examine_status,status,id,security_examine_reason,safe_1,safe_2,safe_3,safe_4,safe_5,safe_6,safe_reason_1,safe_reason_2,safe_reason_3,safe_reason_4,safe_reason_5,safe_reason_6,safe_img")->order("created_at desc")->find();

            $this->assign([
                'demandDetailsInfos' => $demandDetailsInfos,
                'takeTimes' => \config("config.takeTimes"),
                'examineInfo' => $examineInfo,
            ]);

            if ($examineInfo['security_examine_status'] == 0) //未审核
            {
                //去审核
                return $this->fetch('see_demand_security_examine');
            } else { //查看自己历史审核情况
                //查看审核结果
                //获取所有的历史自己角色审核信息
                $examinesInfo = Db::name("examine")->where(['apple_id' => $demandId])->field("security_examine_status,status,id,security_examine_reason,security_time")->order("created_at asc")->select();
                $this->assign([
                    'examinesInfo' => $examinesInfo,
                ]);
                return $this->fetch('see_demand_security_examine_result');
            }
        }

        if ($this->roleId == 8) //经管办
        {
            return $this->fetch();
        }

        if ($this->roleId == 9) //镇领导
        {
            if ($examineInfo['town_examine_status'] == 0) //未审核
            {
                //去审核
                return $this->fetch("see_town_demand");
            } else { //查看自己历史审核情况
                return $this->fetch();
            }
        }

        /**
         * //2：镇经发办 3：农经站 4：审计办 5：财政所 6：镇资产公司,10：安全办，通用审核，无先后顺序
         * */
        if ($this->roleId == 2 || $this->roleId == 3 || $this->roleId == 4 || $this->roleId == 5 || $this->roleId == 6 || $this->roleId == 10) {
            //当前所有子申请信息
            $demandDetailsInfos = Db::name("apple_details")->where(['apple_id' => $demandId])->field("updated_at")->select();

            //当前审核信息
            $examineInfo = Db::name("examine")->where(['apple_id' => $demandId])->order("created_at desc")->find();

            //获取当前角色的审核状态字段
            if ($this->roleId == 2) {
                $commonExamineStatus = $examineInfo['jing_examine_status'];
                $statusName = 'jing_examine_status';
                $reasonName = 'jing_examine_reason';
                $timeName = 'jing_time';
                $roleName = '镇经发办';
            }//2：镇经发办
            if ($this->roleId == 3) {
                $commonExamineStatus = $examineInfo['farmer_examine_status'];
                $statusName = 'farmer_examine_status';
                $reasonName = 'farmer_examine_reason';
                $timeName = 'farmer_time';
                $roleName = '农经站';
            }//3：农经站
            if ($this->roleId == 4) {
                $commonExamineStatus = $examineInfo['audit_examine_status'];
                $statusName = 'audit_examine_status';
                $reasonName = 'audit_examine_reason';
                $timeName = 'audit_time';
                $roleName = '审计办';
            }//4：审计办
            if ($this->roleId == 5) {
                $commonExamineStatus = $examineInfo['finance_examine_status'];
                $statusName = 'finance_examine_status';
                $reasonName = 'finance_examine_reason';
                $timeName = 'finance_time';
                $roleName = '财政所';
            }//5：财政所
            if ($this->roleId == 6) {
                $commonExamineStatus = $examineInfo['assets_examine_status'];
                $statusName = 'assets_examine_status';
                $reasonName = 'assets_examine_reason';;
                $timeName = 'assets_time';
                $roleName = '镇资产公司';
            }//6：镇资产公司
            if ($this->roleId == 10) {
                $commonExamineStatus = $examineInfo['security_do_examine_status'];
                $statusName = 'security_do_examine_status';
                $reasonName = 'security_do_examine_reason';;
                $timeName = 'security_do_time';
                $roleName = '安全办';
            }//6：安全办

            $this->assign([
                'statusName' => $statusName,
                'reasonName' => $reasonName,
                'timeName' => $timeName,
                'roleName' => $roleName,
                'commonExamineStatus' => $commonExamineStatus,
                'demandDetailsInfos' => $demandDetailsInfos,
                'takeTimes' => \config("config.takeTimes"),
                'examineInfo' => $examineInfo,
            ]);

            if ($commonExamineStatus == 0) //未审核
            {
                //去审核
                return $this->fetch('see_common_examine');
            } else { //查看自己历史审核情况
                //查看审核结果
                //获取所有的历史自己角色审核信息
                $examinesInfo = Db::name("examine")->where(['apple_id' => $demandId])->field($statusName . ",status,id," . $reasonName . "," . $timeName)->order("created_at asc")->select();
                $this->assign([
                    'examinesInfo' => $examinesInfo,
                ]);
                return $this->fetch('see_common_examine_result');
            }
        }

        return;
    }

    public function getDemandDetail()
    {
        $demandId = $this->params['id'];
        $demandInfo = Db::name('apple')->alias('a')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->where(['a.id' => $demandId])
            ->order('d.created_at desc')
            ->field("d.*,a.*")
            ->find();

        if (isset($demandInfo)) {
            $demandInfo['build_at'] = date('Y-m-d', $demandInfo['build_at']);
            $demandInfo['finished_at'] = date('Y-m-d', $demandInfo['finished_at']);
            $demandInfo['lease_start'] = date('Y-m-d', $demandInfo['lease_start']);
            $demandInfo['lease_end'] = date('Y-m-d', $demandInfo['lease_end']);
            $demandInfo['lease_end_day'] = date('Y-m-d', $demandInfo['lease_end_day']);
            $demandInfo['lease_start_now'] = date('Y-m-d', $demandInfo['lease_start_now']);
            $demandInfo['lease_end_now'] = date('Y-m-d', $demandInfo['lease_end_now']);
            $demandInfo['rent_start_day'] = date('Y-m-d', $demandInfo['rent_start_day']);
        }

        //审核情况
        $examineInfo = Db::name("examine")->where(['apple_id' => $demandId])->order("created_at desc")->find();
        $this->apiReturn('200', "ok", ["demandInfo" => $demandInfo, "examineInfo" => $examineInfo]);
    }

    /**
     * 查看需求列表
     */
    public function showReleaseDemand($status = 0)
    {

        if ($this->roleId == 0) //村企业
        {
            $where['a.status'] = $status;
            $where['d.status'] = $status;
            $where['a.user_id'] = $this->userId;
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        if ($this->roleId == 1) //镇经管办预审,审核过的申请,不管是通过还是驳回
        {
            $where[] = ['e.jing_before_examine_status', '<>', 0];
            $where[] = ['e.jing_before_id', '=', $this->userId];
//            $where[] = ['a.status', '<>', 0];
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->join('examine e', 'a.id = e.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        if ($this->roleId == 7) //安全办,审核过的申请,不管是通过还是驳回
        {
            $where[] = ['e.security_examine_status', '<>', 0];
            $where[] = ['e.security_id', '=', $this->userId];
            $where[] = ['a.status', '<>', 0];
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->join('examine e', 'a.id = e.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        /**
         * //2：镇经发办 3：农经站 4：审计办 5：财政所 6：镇资产公司,10：安全办，通用审核，无先后顺序,审核过的申请,不管是通过还是驳回
         * */
        if ($this->roleId == 2 || $this->roleId == 3 || $this->roleId == 4 || $this->roleId == 5 || $this->roleId == 6 || $this->roleId == 10) {

            //获取当前角色的审核状态字段
            if ($this->roleId == 2) {
                $statusName = 'jing_examine_status';
                $reasonName = 'jing_examine_reason';
                $userName = 'jing_id';
                $timeName = 'jing_time';
                $roleName = '镇经发办';
            }//2：镇经发办
            if ($this->roleId == 3) {
                $statusName = 'farmer_examine_status';
                $reasonName = 'farmer_examine_reason';
                $userName = 'farmer_id';
                $timeName = 'farmer_time';
                $roleName = '农经站';
            }//3：农经站
            if ($this->roleId == 4) {
                $statusName = 'audit_examine_status';
                $reasonName = 'audit_examine_reason';
                $userName = 'audit_id';
                $timeName = 'audit_time';
                $roleName = '审计办';
            }//4：审计办
            if ($this->roleId == 5) {
                $statusName = 'finance_examine_status';
                $reasonName = 'finance_examine_reason';
                $userName = 'finance_id';
                $timeName = 'finance_time';
                $roleName = '财政所';
            }//5：财政所
            if ($this->roleId == 6) {
                $statusName = 'assets_examine_status';
                $reasonName = 'assets_examine_reason';
                $userName = 'assets_id';
                $timeName = 'assets_time';
                $roleName = '镇资产公司';
            }//6：镇资产公司
            if ($this->roleId == 10) {
                $statusName = 'security_do_examine_status';
                $reasonName = 'security_do_examine_reason';
                $userName = 'security_do_id';
                $timeName = 'security_do_time';
                $roleName = '安全办';
            }//10：安全办

            $where[] = ['e.' . $statusName, '<>', 0];
            $where[] = ['e.' . $userName, '=', $this->userId];
            $where[] = ['a.status', '<>', 0];
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->join('examine e', 'a.id = e.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        if ($this->roleId == 8) //经管办,审核过的申请,不管是通过还是驳回
        {
            $where[] = ['e.management_examine_status', '<>', 0];
            $where[] = ['e.management_id', '=', $this->userId];
//            $where[] = ['a.status', '<>', 0];
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->join('examine e', 'a.id = e.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        if ($this->roleId == 9) //镇领导,审核过的申请,不管是通过还是驳回
        {
            $where[] = ['e.town_examine_status', '<>', 0];
            $where[] = ['e.town_id', '=', $this->userId];
            $where[] = ['a.status', '<>', 0];
            //当前用户发布的申请
            $demondInfos = Db::name('apple')
                ->where($where)
                ->alias('a')
                ->group('d.apple_id')
                ->order('a.updated_at asc')
                ->join('apple_details d', 'a.id = d.apple_id')
                ->join('examine e', 'a.id = e.apple_id')
                ->field("d.*,a.created_at,a.updated_at as apple_updated_at,a.created_at as apple_created_at,a.contract_type as apple_contract_type,a.process_type as apple_process_type,a.is_soft_first as apple_is_soft_first,a.is_public_rental as apple_is_public_rental,a.status as apple_status")
                ->paginate(40, false, ['query' => request()->param()]);
            $page = $demondInfos->render();
        }

        $this->assign([
            'demondInfos' => $demondInfos,
            'page' => $page,
            'status' => $status,
            'roleId'=>$this->roleId
        ]);

        if (isMobile()) {
            return $this->fetch("show_mobile_release_demand");
        } else {
            return $this->fetch("show_release_demand");
        }
    }

    /**
     * 经管办 导出
     */
    public function exportData($status = '', $countryid = '', $type = '', $name = '', $person = '',$start_time = "", $end_time = "")
    {
        $specWhere = [];
        if (!empty($status)) {
            $specWhere[] = ["a.status", 'eq', $status];
        }
        if (!empty($countryid)) {
            $specWhere[] = ["a.user_id", 'eq', $countryid];
        }
        if (!empty($type)) {
            if ($type == 1) {
                $specWhere[] = ["a.process_type", 'eq', 0];
                $specWhere[] = ["a.is_soft_first", 'eq', 1];
            }
            if ($type == 2) {
                $specWhere[] = ["a.process_type", 'eq', 0];
                $specWhere[] = ["a.is_soft_first", 'eq', 0];
            }
            if ($type == 3) {
                $specWhere[] = ["a.process_type", 'eq', 1];
                $specWhere[] = ["a.is_soft_first", 'eq', 1];
            }
            if ($type == 4) {
                $specWhere[] = ["a.process_type", 'eq', 1];
                $specWhere[] = ["a.is_soft_first", 'eq', 0];
            }
        }
        if (!empty($name)) {
            $specWhere[] = ["d.house_name", "like", "%" . $name . "%"];
        }
        if (!empty($person)) {
            $specWhere[] = ["d.original_tenant", "like", "%" . $person . "%"];
        }
        if (!empty($start_time)){
            $specWhere[] = ["a.created_at", '>', strtotime($start_time)];
        }
        if (!empty($end_time)){
            $specWhere[] = ["a.created_at", '<', strtotime($end_time)];
        }
        $data = Db::name('apple')
            ->where($specWhere)
            ->alias('a')
            ->group('d.apple_id')
            ->order('d.created_at desc')
            ->join('user u', 'a.user_id = u.id')
            ->join('apple_details d', 'a.id = d.apple_id')
            ->field("d.*,u.username,concat(Date(FROM_UNIXTIME(d.lease_start)),'至',Date(FROM_UNIXTIME(d.lease_end))) lease_start")
            ->select();


        $titleName = '楼宇表';
        $head = ["序号", "村公司名称", "租赁方式", "租赁地址", "产证情况", "租赁面积/m²", "意向承租方", "工商税务是否落地", "租赁期限", "租赁起止日期",
            "免租期", "拟租赁单价（元/㎡/天）", "合同年租金（万元）", "原租赁单价（元/㎡/天）", "备注", "原承租方", "意向承租方上年度税收（万元）", "租金增长幅度"];
        $keys = ["id", "username", "lease_mode", "lease_area", "house_card_number", "lease_area", "lease_unit", "tax_landing", "lease_year", "lease_start",
            "rent_free_period", "lease_price_now", "investment_total", "lease_price", "explain", "lease_unit", "last_tax", "incremental_way"];
        $count = count($head);  //计算表头数量

        $spreadsheet = new Spreadsheet();
        $sheet = $spreadsheet->getActiveSheet();

        $sheet->mergeCells('A1:R1');
        $sheet->getStyle('A1')->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER);
        $sheet->getStyle('A1')->getFont()->setBold(true)->setName('Arial')->setSize(16);
        $sheet->setCellValue('A1', "楼宇经营管理审核情况表");
        for ($i = 65; $i < $count + 65; $i++) {
            //数字转字母从65开始，循环设置表头：
            $sheet->setCellValue(strtoupper(chr($i)) . '2', $head[$i - 65]);
        }

        foreach ($data as $key => $item) {

            for ($i = 65; $i < $count + 65; $i++) {     //数字转字母从65开始：
                $sheet->setCellValue(strtoupper(chr($i)) . ($key + 3), $item[$keys[$i - 65]]);
                $spreadsheet->getActiveSheet()->getColumnDimension(strtoupper(chr($i)))->setWidth(20); //固定列宽
            }

        }

        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="' . $titleName . '.xlsx"');
        header('Cache-Control: max-age=0');
        $writer = new Xlsx($spreadsheet);
        $writer->save('php://output');

        //删除清空：
        $spreadsheet->disconnectWorksheets();
        unset($spreadsheet);
        return;
    }
}