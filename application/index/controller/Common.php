<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018/11/19
 * Time: 15:58
 */

namespace app\index\controller;

use think\Controller;
use \think\facade\Lang;
use app\common\json\PublicRe;
use think\Request;

class Common extends Controller
{
    public $params;
    public $request;
    public $lang;
    /**
     * 初始化
     */
    public function __construct(Request $request)
    {
        parent::__construct(); // TODO: Change the autogenerated stub
        $this->request = $request;
        if($this->request->isPost())
        {
            $json = $this->request->post();
            $this->params = $json;

            //语言包设置
            $lang = 'zh-cn';
                //切换语言
            self::changeLanguage($lang);
        } else {
            //语言包设置
            $lang = $this->request->get('lang');
            if(!isset($lang) || $lang == '')
            {
                $lang = 'zh-cn';
            }
            $this->lang = $lang;
            //切换语言
            self::changeLanguage($lang);
        }
    }

    /**
     * 多国语言切换
     */
    static function changeLanguage($lang='')
    {
        $langArray = ['zh-cn','en-us','zh-tw']; //中文，英文，繁体
        if($lang == '' || !in_array($lang,$langArray))
        {
            return true;
        }
        Lang::load( '../application/common/lang/'.$lang.'.php');
    }

    /**
     * @param null $data
     * @param string $status
     * @param null $message
     * @return array
     */
    public function apiReturn($status = '', $message = null,$data = null)
    {
        $status === null and $status = 0;
        $re = [
            'code' => (int)$status,
            'info' => $message,
        ];
        $data !== null and $re['data'] = $data;
        $rs = array_merge($re,PublicRe::$rej);
        echo json_encode($rs);
        exit();
    }

    /**
     * 验证token,token不在验证
     */
    /*public function checkToken($token='')
    {
        $validate = new \think\Validate;
        $validate->rule([
            '__token__'  =>  'token',
        ]);

        $data = [
            '__token__'  => $token,
        ];
        if (!$validate->check($data)) {
            $this->apiReturn('200',lang('token_parameter_exception'),[]);
        }
    }*/

    /*
    * 生成token函数
    * @return [json] [description]
    */
    public function getToken(){
        return $this->request->token();
    }

}