<?php

namespace app\admin\controller;
use think\response\Json;
use app\common\model\ModuleSetting;
use think\Db;

class Module extends Base
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->module = Db::table('ecshecom_module_setting');
        $this->type = Db::table('ecshecom_module_type');
    }
    //活动列表
    public function index()
    {
        if ($this->request->isAjax()) {
            $page = input('get.page/d', 1);
            $limit = input('get.limit/d', 20);
            $title = request()->param('title');
            $type = request()->param('type');
            $datestart = request()->param('datestart');
            $dateend = request()->param('dateend');
            $status = request()->param('status');
            if(!empty($title)){
                $map[] = ['a.name', 'like', $title];
            }
            if(!empty($type)){
                $map[] = ['a.type', '=', $type];
            }
            if($status==""){
                $map[] = ['a.status', 'neq', 3];
            }else{
                $map[] = ['a.status', 'eq', (int)$status];
            }

            //查询时间段是否有交集
            if(!empty($datestart)&& !empty($dateend)){
                $map1=[
                    ['a.begin_time', '>=',strtotime($datestart) ],
                    ['a.begin_time', '<=',strtotime($dateend)+86399]
                ];
                $map2=[
                    ['a.begin_time', '<=',strtotime($datestart) ],
                    ['a.end_time', '>=',strtotime($dateend)+86399]
                ];
                $map3=[
                    ['a.end_time', '>=',strtotime($datestart) ],
                    ['a.end_time', '<=',strtotime($dateend)+86399]
                ];
                $zfList = $this->module->alias('a')
                    ->join('ecshecom_module_type ac','ac.id=a.type')
                    ->whereOr([$map1,$map2,$map3])
                    ->where($map)
                    ->page($page, $limit)
                    ->order('a.id desc')
                    ->field('a.*,ac.name as acname')
                    ->select();
            }else{
                if(!empty($datestart)){
                    $map[] = ['a.begin_time', '>=', strtotime($datestart)];
                }
                if(!empty($dateend)){
                    $map[] = ['a.end_time', '<=', strtotime($dateend)+86399];
                }
                $zfList = $this->module->alias('a')
                    ->join('ecshecom_module_type ac','ac.id=a.type')
                    ->where($map)
                    ->page($page, $limit)
                    ->order('a.id desc')
                    ->field('a.*,ac.name as acname')
                    ->select();
            }

            foreach($zfList as $key=>$val){
                $zfList[$key]['status'] = isset(ModuleSetting::$status_config[$val['status']])?ModuleSetting::$status_config[$val['status']]:'';
                $zfList[$key]['belong_type'] = isset(ModuleSetting::$belong_type[$val['belong_type']])?ModuleSetting::$belong_type[$val['belong_type']]:'';
                $zfList[$key]['begin_time']=date('Y-m-d H:i:s',$zfList[$key]['begin_time']);
                $zfList[$key]['end_time']=date('Y-m-d H:i:s',$zfList[$key]['end_time']);
            }
            $count = $this->module->where($map)->count();
            $data = [
                'code' => 0,
                'msg' => '数据返回成功',
                'count' => $count,
                'data' => $zfList
            ];
            return json($data);
        }
        $group = $this->type->where('status', 1)->field('id, name')->select();
        $this->assign('group', $group);
        return $this->fetch('module_list');
    }
    public function moduleForm(){
        if ($this->request->isPost()) {
            $data = input('data/a', []);
            $title = $data['id'] ? '编辑' : '新增';
            $data['begin_time']=strtotime($data['begin_time']);
            $data['end_time']=strtotime($data['end_time'])+86399;
            $data['status'] = (isset($data['status']) ? '1' : '0');
            $data['is_need_login'] = (isset($data['is_need_login']) ? '1' : '0');
            $data['is_need_auth'] = (isset($data['is_need_auth']) ? '1' : '0');
            $data['editor']=session('username');
            if($data['end_time'] <= $data['begin_time']){
                $this->error('结束时间必须大于开始时间');
            }
            if (!empty($data['id'])) {     //编辑
                $rs = $this->module->update($data);
            }else{
                $data['created_at']=time();
                $rs = $this->module->insert($data);
            }
            if ($rs) {
                $this->success($title . '成功');
            } else {
                $this->error($title . '失败');
            }
        } else {
            $aid = input('get.aid/d', 0);
            $info = $this->module->where('id='.$aid)->find($aid);
            if($info){
                $info['begin_time']=date('Y-m-d',$info['begin_time']);
                $info['end_time']=date('Y-m-d',$info['end_time']);
            }

            $group = $this->type->where('status', 1)->column('id, name');
            $groups = [];
            foreach ($group as $key => $val) {
                $temp['id'] = $key;
                $temp['name'] = $val;
                $groups[] = $temp;
            }
            $groupJson = json_encode($groups);
            $this->assign('group', $group);
            $this->assign('groupJson', $groupJson);
            $this->assign('info', $info);
            return $this->fetch('module_form');
        }
    }
    public function delModule()
    {
        $ids = array_unique(input('post.id/a', []));
        foreach ($ids as $val) {
            $rs = Db::table('ecshecom_module_setting')->where('id', $val)->delete();
        }
        unset($val);
        $this->success('删除成功');
    }
    //活动分类
    public function type(){
        if ($this->request->isAjax()) {
            $page = input('get.page/d', 1);
            $limit = input('get.limit/d', 20);
            $map[] = ['status', '<>', 2];
            $cgList = $this->type
                ->where($map)
                ->page($page, $limit)
                ->order('created_at desc')
                ->select();
            foreach($cgList as $key=>$val){
                switch ($cgList[$key]['status']) {
                    case '0':
                        $cgList[$key]['status']='关闭';
                        break;
                    case '1':
                        $cgList[$key]['status']='开启';
                        break;
                }
                $cgList[$key]['created_at']=date('Y-m-d H:i:s',$cgList[$key]['created_at']);
            }
            $count = $this->type->where($map)->count();
            $data = [
                'code' => 0,
                'msg' => '数据返回成功',
                'count' => $count,
                'data' => $cgList
            ];
            return json($data);
        }
        return $this->fetch('type_list');
    }
    public function delType()
    {
        $ids = array_unique(input('post.id/a', []));
        foreach ($ids as $val) {
            $rs = $this->type->where('id', $val)->delete();
        }
        unset($val);
        $this->success('删除成功');
    }
    public function typeForm(){
        if ($this->request->isPost()) {
            $data = input('');
            $title = $data['id'] ? '编辑' : '新增';
            $data['created_at']=time();
            //状态
            $data['status'] = (isset($data['status']) ? '1' : '0');
            if ($data['id']) {     //编辑
                $rs = $this->type->update($data);
            }else{
                $rs = $this->type->insert($data);
            }
            if ($rs) {
                $this->success($title . '成功');
            } else {
                $this->error($title . '失败');
            }
        } else {
            $aid = input('get.aid/d', 0);
            $info = $this->type->where('id='.$aid)->find($aid);
            $this->assign('info', $info);
            return $this->fetch();
        }
    }
    //上传
    public function uploadImg(){
        $path = "static/upload/";//上传路径
        $typeArr = array("jpg", "png", "gif",'jpeg');
        if (isset($_POST)) {
            $name = $_FILES['file']['name'];
            $size = $_FILES['file']['size'];
            $name_tmp = $_FILES['file']['tmp_name'];
            if (empty($name)) {
                return Json(['error'=>'您还未选择图片']);
                exit;
            }
            $type = strtolower(substr(strrchr($name, '.'), 1)); //获取文件类型

            if (!in_array($type, $typeArr)) {
                return Json(['error'=>'请上传jpg,png或gif类型的图片']);
                exit;
            }
            if ($size > (1024 * 1024 * 10)) {
                return Json(['error'=>'图片大小已超过10MB！']);
                exit;
            }

            $pic_name = time() . rand(10000, 99999) . "." . $type;//图片名称
            $pic_url = $path . $pic_name;//上传后图片路径+名称
            if(!is_dir($path)){
                mkdir($path,0777,true);
            }
            if (move_uploaded_file($name_tmp, $pic_url)) { //临时文件转移到目标文件夹
                $url='/'.$pic_url;
                return Json(['code'=>'0','url'=>$url]);

            } else {
                return Json(['code'=>'1']);
            }
        }
    }
}
